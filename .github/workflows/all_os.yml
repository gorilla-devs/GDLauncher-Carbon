name: All OS

on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  mac_universal:
    defaults:
      run:
        working-directory: ./GDLauncher
    runs-on: macos-12
    timeout-minutes: 80
    steps:
      - uses: actions/checkout@v3
        with:
          path: GDLauncher
      - uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
          targets: aarch64-apple-darwin, x86_64-apple-darwin
          components: clippy, rustfmt
      - name: Prepare
        run: |
          echo "" > crates/carbon_app/src/db.rs
          cargo fmt --check
      - run: |
          npm run sudo-init
          chmod -R a+x node_modules
      - name: Iridium patchfix
        run: node iridium_patchfix.js
      - name: Prisma codegen
        env:
          CARGO_INCREMENTAL: 0
        run: pnpm prisma:generate
      - name: Build
        run: pnpm build:mac-universal
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
      - name: Lint
        run: pnpm lint
      - name: Clear target before tests to avoid folder getting too big
        run: rm -rf target
      - name: Test
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          RUNTIME_PATH: ${{ vars.RUNTIME_PATH }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
        run: pnpm test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: apps/desktop/
          path: apps/desktop/apps/desktop/
  ubuntu_x64:
    defaults:
      run:
        working-directory: ./GDLauncher
    runs-on: ubuntu-22.04
    timeout-minutes: 80
    steps:
      - uses: actions/checkout@v3
        with:
          path: GDLauncher
      - uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
          targets: x86_64-unknown-linux-gnu
          components: clippy, rustfmt
      - name: Prepare
        run: |
          echo "" > crates/carbon_app/src/db.rs
          cargo fmt --check
      - run: |
          npm run sudo-init
          chmod -R a+x node_modules
      - name: Iridium patchfix
        run: node iridium_patchfix.js
      - name: Prisma codegen
        env:
          CARGO_INCREMENTAL: 0
        run: pnpm prisma:generate:linux-x64
      - name: Build
        run: pnpm build:linux-x64
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
      - name: Lint
        run: pnpm lint
      - name: Clear target before tests to avoid folder getting too big
        run: rm -rf target
      - name: Test
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          RUNTIME_PATH: ${{ vars.RUNTIME_PATH }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm test
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apps/desktop/
          path: "**/"
  windows_x64:
    defaults:
      run:
        working-directory: ./GDLauncher
    runs-on: windows-2022
    timeout-minutes: 80
    steps:
      - uses: actions/checkout@v3
        with:
          path: GDLauncher
      - uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
          targets: x86_64-pc-windows-msvc
          components: clippy, rustfmt
      - name: Prepare
        shell: bash
        run: |
          echo "" > crates/carbon_app/src/db.rs
          cargo fmt --check
      - name: init
        shell: bash
        run: npm run init
      - name: Iridium patchfix
        shell: bash
        run: node iridium_patchfix.js
      - name: Prisma codegen
        shell: bash
        env:
          CARGO_INCREMENTAL: 0
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: pnpm prisma:generate:win-x64
      - name: Build
        shell: bash
        run: pnpm build:win-x64
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
          CARGO_NET_GIT_FETCH_WITH_CLI: true
      - name: Lint
        shell: bash
        run: pnpm lint
      - name: Clear target before tests to avoid folder getting too big
        shell: bash
        run: rm -rf target
      - name: Test
        shell: bash
        env:
          CARGO_INCREMENTAL: 0
          BASE_API: ${{ vars.BASE_API }}
          MS_AUTH_CLIENT_ID: ${{ vars.MS_AUTH_CLIENT_ID }}
          RUNTIME_PATH: ${{ vars.RUNTIME_PATH }}
          META_BASE_URL: ${{ vars.META_BASE_URL }}
          USER_AGENT_PREFIX: ${{ vars.USER_AGENT_PREFIX }}
          GDL_AUTH: ${{ secrets.GDL_AUTH }}
          CURSEFORGE_API_KEY: ${{ vars.CURSEFORGE_API_KEY }}
          CURSEFORGE_API_BASE: ${{ vars.CURSEFORGE_API_BASE }}
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: pnpm test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: apps/desktop/
          path: apps/desktop/apps/desktop/
