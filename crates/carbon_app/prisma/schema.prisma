datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

generator client {
  provider = "cargo prisma"
  output   = "../src/db.rs"
}

model AppConfiguration {
  id                  Int     @id @unique @default(0)
  theme               String  @default("main")
  reducedMotion       Boolean @default(false)
  language            String  @default("en")
  discordIntegration  Boolean @default(true)
  releaseChannel      String  @default("stable")
  activeAccountUuid   String?
  concurrentDownloads Int     @default(8)
  showNews            Boolean @default(true)
  startupResolution   String  @default("854x480")
  javaCustomArgs      String  @default("")
  xmx                 Int     @default(1024)
  xms                 Int     @default(1024)
  defaultInstanceGroup Int?
  isFirstLaunch       Boolean @default(true)
  autoManageJava      Boolean @default(true)
}

model Java {
  id          String              @id @unique @default(uuid())
  path        String              @unique
  major       Int
  fullVersion String
  type        String
  os          String
  arch        String
  vendor      String
  isValid     Boolean             @default(true)
  JavaProfile JavaSystemProfile[]
}

model JavaSystemProfile {
  id     String  @id @unique @default(uuid())
  name   String  @unique
  java   Java?   @relation(fields: [javaId], references: [id])
  javaId String?
}

model Account {
  uuid           String    @id
  username       String
  // presence signifies a microsoft account
  accessToken    String?
  tokenExpires   DateTime?
  msRefreshToken String?
  lastUsed       DateTime
  skinId         String?
}

model Skin {
  id   String @id
  skin Bytes
}

model HTTPCache {
  url          String    @id
  status_code  Int
  data         Bytes
  expiresAt    DateTime? @default(now())
  lastModified String?
  etag         String?
}

model ActiveDownloads {
  url     String @id
  file_id String @unique
}

model Instance {
  id        Int            @id @default(autoincrement())
  name      String
  shortpath String         @unique
  favorite  Boolean        @default(false)
  index     Int
  group     InstanceGroup  @relation(fields: [groupId], references: [id])
  groupId   Int
}

model InstanceGroup {
  id         Int        @id @default(autoincrement())
  name       String
  groupIndex Int
  instances  Instance[]
}

model ModFileCache {
  path     String      @id
  filesize Int
  md5      Bytes
  metadata ModMetadata @relation(fields: [md5], references: [md5])
}

model ModMetadata {
  md5         Bytes @id
  murmur2     Int
  name        String?
  modid       String?
  version     String?
  description String?
  authors     String?
  curseforge  CurseForgeModCache? @relation(fields: [murmur2], references: [murmur2])
  cachedFiles ModFileCache[]
}

model CurseForgeModCache {
  murmur2     Int @id
  project_id  Int
  file_id     Int
  name        String
  urlslug     String
  summary     String
  metadata    ModMetadata[]
}
